/* 
  Sketch generated by the Arduino IoT Cloud Thing "Sensor"
  https://create.arduino.cc/cloud/things/cb299d7b-d46d-4290-8618-c704769abfc4 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float humidity;
  float targetTemp;
  float temp;
  bool heater_on;
  bool manual;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include "DHT.h"

#define DHTPIN 2 //D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();
  
  dht.begin();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  
  Serial.println(("Target temp:"));
  Serial.println((targetTemp));
  
  float hum = dht.readHumidity();
  float tem = dht.readTemperature();
  
  Serial.println(("Measured temp:"));
  Serial.println((tem));
  Serial.println(("Measured humidity:"));
  Serial.println((hum));
  
  if (isnan(hum) || isnan(tem)) {
    Serial.println(F("Read failed!"));
    return;
  }
  
  // Write to cloud
  humidity = hum;
  temp = tem;
  
  if (tem < targetTemp || manual) {
    heater_on = true;
    Serial.println(("Heating ON"));
  }
  else {
    heater_on = false;
    Serial.println(("Heating OFF"));
  }
  
  delay(3000); 
}

/*
  Since Temp is READ_WRITE variable, onTempChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTempChange()  {
  // Add your code here to act upon Temp change
}

/*
  Since Humidity is READ_WRITE variable, onHumidityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHumidityChange()  {
  // Add your code here to act upon Humidity change
}

/*
  Since TargetTemp is READ_WRITE variable, onTargetTempChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTargetTempChange()  {
  // Add your code here to act upon TargetTemp change
}

/*
  Since Manual is READ_WRITE variable, onManualChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onManualChange()  {
  // Add your code here to act upon Manual change
}

/*
  Since ManualSetting is READ_WRITE variable, onManualSettingChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onManualSettingChange()  {
  // Add your code here to act upon ManualSetting change
}


/*
  Since HeaterOn is READ_WRITE variable, onHeaterOnChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHeaterOnChange()  {
  // Add your code here to act upon HeaterOn change
}